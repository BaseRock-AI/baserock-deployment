---
apiVersion: v1
kind: Secret
metadata:
  name: celery-worker-service-secret
  namespace: ${NAMESPACE}
type: Opaque
stringData:
  MONGO_URL: "${MONGO_URL}"
  LLM_API_KEY: "${LLM_API_KEY}"
  LLM_MODEL_NAME: "${LLM_MODEL_NAME}"
  CHROMA_HOST: "${CHROMA_HOST}"
  CHROMA_TOKEN: "${CHROMA_TOKEN}"
  DEFINITION_MODE_THRESHOLD: "${DEFINITION_MODE_THRESHOLD}"
  DOMAIN_NAME: "${DOMAIN}${DOMAIN_PORT}"
  LLM_ENABLED: "${LLM_ENABLED}"
  MAX_TEST_CASES: "${MAX_TEST_CASES}"
  POSITIVE_TEST_RATIO: "${POSITIVE_TEST_RATIO}"
  VOYAGE_API_KEY: "${VOYAGE_API_KEY}"
  VOYAGE_MODEL_NAME: "${VOYAGE_MODEL_NAME}"
  MAX_WORKERS: "${MAX_WORKERS}"
  REDIS_URL: "${REDIS_URL}"
  CELERY_QUEUE: "${CELERY_QUEUE_NAME}"
  LLM_PROVIDER: "${LLM_PROVIDER}"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: celery
  template:
    metadata:
      labels:
        app: celery
    spec:
      ${IMAGE_PULL_SECRET_BLOCK}
      containers:
        - name: ${CELERY_WORKER_DEPLOYMENT}
          image: ${CELERY_WORKER_IMAGE}
          imagePullPolicy: Always
          envFrom:
            - secretRef:
                name: celery-worker-service-secret
          resources:
            limits:
              cpu: ${CELERY_WORKER_CPUS}
              memory: ${CELERY_WORKER_MEMORY}
              ephemeral-storage: ${CELERY_WORKER_STORAGE}
            requests:
              cpu: ${CELERY_WORKER_CPUS}
              memory: ${CELERY_WORKER_MEMORY}
              ephemeral-storage: ${CELERY_WORKER_STORAGE}