apiVersion: v1
kind: Namespace
metadata:
  name: ${NAMESPACE}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: admin-portal-map
  namespace: ${NAMESPACE}
data:
  REACT_APP_API_URL: "https://${DOMAIN}"
  DOMAIN_NAME: "${DOMAIN}"
---
apiVersion: v1
kind: Service
metadata:
  name: admin-portal-svc
  namespace: ${NAMESPACE}
spec:
  type: ClusterIP
  selector:
    app: admin-portal
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-portal-deployment
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin-portal
  template:
    metadata:
      labels:
        app: admin-portal
    spec:
      containers:
        - name: admin-portal
          image: gcr.io/production-385606/admin-portal-ui:0.12.1-SM-697.1
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: admin-portal-map
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-portal-ingress
  namespace: ${NAMESPACE}
  annotations:
    cert-manager.io/issuer: "letsencrypt-production"
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - ${DOMAIN}
      secretName: app-baserock-onprem-ssl-cert
  rules:
    - host:  ${DOMAIN}
      http:
        paths:
          - path: /admin-portal(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: admin-portal-svc
                port:
                  number: 80
          - path: /admin-portal/config.js
            pathType: Prefix
            backend:
              service:
                name: admin-portal-svc
                port:
                  number: 80
